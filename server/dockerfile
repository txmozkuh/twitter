# Use Node.js LTS version
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Install Yarn via official installer (recommended)
RUN curl -fsSL https://yarnpkg.com/install.sh | bash -s -- --version 1.22.19
ENV PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Copy package files
COPY package.json yarn.lock ./

# Install dependencies with exact versions
RUN yarn install --frozen-lockfile --production=false

# Copy source code
COPY . .

# Build stage
FROM base AS build

# Build TypeScript to JavaScript
RUN yarn build

# Production stage
FROM node:18-alpine AS production

# Set working directory
WORKDIR /app

# Install Yarn via official installer (same version as build)
RUN curl -fsSL https://yarnpkg.com/install.sh | bash -s -- --version 1.22.19
ENV PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Copy package files
COPY package.json yarn.lock ./

# Install only production dependencies with exact versions
RUN yarn install --frozen-lockfile --production=true && yarn cache clean

# Copy built application from build stage
COPY --from=build /app/dist ./dist

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership of app directory
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port (adjust as needed)
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD node --version || exit 1

# Start the application
CMD ["node", "dist/index.js"]